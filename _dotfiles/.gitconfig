[core]
	ileMod = false
[user]
	name = Michael Malura
	email = michael@malura.de
[push]
	default = simple
[github]
	user = maluramichael
[color]
	ui = true
[core]
	editor = vim
	autocrlf = input
[merge]
	tool = meld
[mergetool]
	keepTemporaries = false
	prompt = false
[alias]
	u = "!f(){ git stash save && git pull --rebase && git stash pop; };f"
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	a = add
	c = commit --verbose
	ca = commit -a --verbose
	cm = commit -m
	cam = commit -a -m
	m = commit --amend --verbose
	d = diff
	ds = diff --stat
	dc = diff --cached

	# list aliases
	la = "!git config -l | grep alias | cut -c 7-"

	zip = "!f() { git archive --format=zip -o `git currentTag`.zip HEAD; }; f"

	new = checkout -b

	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -u && git commit -m "WIP"
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

	#This one is also usefule to run merge test before merge to check for any conflicts.
	mergetest = "!f(){ git merge --no-commit --no-ff \"$1\"; git merge --abort; echo \"Merge aborted\"; };f "
[pull]
	rebase = true
[gpg]
	program = /usr/local/bin/gpg
[commit]
	gpgsign = false
